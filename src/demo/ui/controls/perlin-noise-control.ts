import { PerlinNoisePattern } from '../../../patterns/perlin-noise-pattern';
import type { PatternControlConfig } from './controls-registry';

export const controls: PatternControlConfig = {
    label: 'Perlin noise',
    pattern: PerlinNoisePattern,
    controls: [
        {
            id: 'characters',
            label: 'Characters',
            type: 'text',
            outType: 'array',
            value: '.+#@',
            category: 'pattern',
            description: 'Characters used for rendering (from lightest to darkest).',
        },
        {
            id: 'frequency',
            label: 'Frequency',
            type: 'range',
            outType: 'number',
            value: 0.05,
            min: 0.001,
            max: 0.5,
            step: 0.001,
            category: 'pattern',
            description: 'Base frequency of the Perlin noise (higher values create more rapid changes).',
        },
        {
            id: 'octaves',
            label: 'Octaves',
            type: 'range',
            outType: 'number',
            value: 5,
            min: 1,
            max: 8,
            step: 1,
            category: 'pattern',
            description: 'Number of noise layers. More octaves add detail.',
        },
        {
            id: 'persistence',
            label: 'Persistence',
            type: 'range',
            outType: 'number',
            value: 0.5,
            min: 0.1,
            max: 1.0,
            step: 0.01,
            category: 'pattern',
            description: 'Controls amplitude of each octave (lower values reduce higher octave influence).',
        },
        {
            id: 'lacunarity',
            label: 'Lacunarity',
            type: 'range',
            outType: 'number',
            value: 2.0,
            min: 1.0,
            max: 4.0,
            step: 0.1,
            category: 'pattern',
            description: 'Controls frequency of each octave.',
        },
        {
            id: 'seed',
            label: 'Seed',
            type: 'number',
            outType: 'number',
            value: 42,
            min: 0,
            max: 99999,
            step: 1,
            category: 'pattern',
            description: 'Seed for random number generation (same seed produces same pattern).',
        }
    ],
};
